# Generated by Django 4.1.7 on 2023-03-12 11:04

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
from django.contrib.auth import get_user_model


def add_initial_data(apps, schema_editor):
    Tier = apps.get_model('core', 'Tier')
    Tier(name='Basic', resolutions=[200]).save()
    Tier(name='Premium', resolutions=[
         200, 400], unlimited_resolution=True).save()
    Tier(name='Enterprise', resolutions=[
         200, 400], unlimited_resolution=True, active_link_share=True).save()
    get_user_model().objects.create_superuser(
        email='admin@gmail.com',
        password='adminPass123!',
    )


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('resolutions', django.contrib.postgres.fields.ArrayField(
                    base_field=models.PositiveIntegerField(), blank=True, null=True, size=None)),
                ('unlimited_resolution', models.BooleanField(default=False)),
                ('active_link_share', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                 help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                 related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('tier', models.ForeignKey(default=1,
                 on_delete=django.db.models.deletion.CASCADE, to='core.tier')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                 related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RunPython(add_initial_data)
    ]
